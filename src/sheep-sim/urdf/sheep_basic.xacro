<?xml version="1.0"?>
<robot name="diff_drive" xmlns:xacro="http://www.ros.org/wiki/xacro">


  <xacro:property name="sheep_plate_radius" value="0.2" />
  <xacro:property name="sheep_plate_thickness" value="0.05" />
  <xacro:property name="sheep_plate_height_from_ground" value="0.05" />
  <xacro:property name="wheel_radius" value="0.06" />
  <xacro:property name="wheel_thickness" value="0.02" />
  <!-- Base Link -->
  <link name="chassis">
  </link>

  <macro name="cylinder_inertia" params="m r h">
    <inertial>
      <mass value="${m}" />
      <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0"
        iyy="${m*(3*r*r+h*h)/12}" iyz="0"
        izz="${m*r*r/2}"
      />
    </inertial>
  </macro>

  <link name="base_footprint">
    <visual>
      <origin xyz="0.0 0.0 ${sheep_plate_height_from_ground}" />
      <geometry>
        <cylinder radius="${sheep_plate_radius}" length="${sheep_plate_thickness}" />
      </geometry>
      <material name="blue" />
    </visual>

    <collision>
      <origin xyz="0.0 0.0 ${sheep_plate_height_from_ground}" />
      <geometry>
        <cylinder radius="${sheep_plate_radius}" length="${sheep_plate_thickness}" />
      </geometry>
    </collision>

    <!-- <inertial>
      <mass value="3.0" />
      <inertia ixx="${0.25 * sheep_plate_radius**2 + 1/12 * sheep_plate_thickness**2}"
        iyy="${0.25 * sheep_plate_radius**2 + 1/12 * sheep_plate_thickness**2}"
        izz="${0.5 * sheep_plate_radius**2}"
        ixy="0.0" ixz="0.0" iyz="0.0" />
    </inertial> -->
    <xacro:cylinder_inertia m="10" r="${sheep_plate_radius}" h="${sheep_plate_thickness}" />

  </link>

  <xacro:macro name="wheel_shape">
    <geometry>
      <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
    </geometry>
  </xacro:macro>


  <!-- left wheel Link -->
  <link name="left_wheel">
    <collision>
      <xacro:wheel_shape />

    </collision>

    <visual>
      <xacro:wheel_shape />
      <material name="black" />
    </visual>

    <xacro:cylinder_inertia m="10" r="${wheel_radius}" h="${wheel_thickness}" />

    <!-- <inertial>
      <mass value="1.0" />
      <inertia ixx="${0.25 * wheel_radius**2 + 1/12 * wheel_thickness**2}"
        iyy="${0.25 * wheel_radius**2 + 1/12 * wheel_thickness**2}"
        izz="${0.5 * wheel_radius**2}"
        ixy="0.0" ixz="0.0" iyz="0.0" />
    </inertial> -->
  </link>


  <!-- left wheel Link -->
  <link name="right_wheel">
    <collision>
      <xacro:wheel_shape />
    </collision>

    <visual>
      <xacro:wheel_shape />
      <material name="black" />
    </visual>

    <xacro:cylinder_inertia m="10" r="${wheel_radius}" h="${wheel_thickness}" />

    <!-- <inertial>
      <mass value="1.0" />
      <inertia ixx="${0.25 * wheel_radius**2 + 1/12 * wheel_thickness**2}"
        iyy="${0.25 * wheel_radius**2 + 1/12 * wheel_thickness**2}"
        izz="${0.5 * wheel_radius**2}"
        ixy="0.0" ixz="0.0" iyz="0.0" />
    </inertial> -->
  </link>

  <link name="caster">
    <collision>
      <geometry>
        <sphere radius="${wheel_radius/4}" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0.01</mu>
            <mu2>0.01</mu2>
            <slip1>1.00</slip1>
            <slip2>1.00</slip2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual>
      <geometry>
        <sphere radius="${wheel_radius/4}" />
      </geometry>
      <material name="white" />
    </visual>

    <inertial>
      <mass value="0.1" />
      <!-- <inertia ixx="${2/5 * 0.2 * (wheel_radius/4)**2}"
      iyy="${2/5 * 0.2 * (wheel_radius/4)**2}"
      izz="${2/5 * 0.2 * (wheel_radius/4)**2}"
      ixy="0.0" ixz="0.0" iyz="0.0" /> -->
      <inertia ixx="0.001"
        iyy="0.001"
        izz="0.001"
        ixy="0.0" ixz="0.0" iyz="0.0" />
    </inertial>
  </link>

  <link name="lidar_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
      <material name="silver" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="0.005" />
      <inertia ixx="0.0001" iyy="0.0001" izz="0.0001" ixy="0" ixz="0" iyz="0" />
    </inertial>
  </link>

  <!-- joints -->

  <joint name="left_wheel_joint" type="continuous">
    <parent link="chassis" />
    <child link="left_wheel" />
    <origin
      xyz="-0.09 ${sheep_plate_radius + wheel_thickness/2.0} ${sheep_plate_height_from_ground}"
      rpy="-1.5707 0.0 0.0" />
    <axis xyz="0 0 1" />
    <dynamics damping="0.2" />
  </joint>

  <joint name="right_wheel_joint" type="continuous">
    <parent link="chassis" />
    <child link="right_wheel" />
    <origin
      xyz="-0.09 ${-(sheep_plate_radius + wheel_thickness/2.0)} ${sheep_plate_height_from_ground}"
      rpy="-1.5707 0.0 0.0" />
    <axis xyz="0 0 1" />
    <dynamics damping="0.2" />
  </joint>

  <joint name="caster_joint" type="fixed">
    <origin
      xyz="${sheep_plate_radius*0.75} 0.0 ${sheep_plate_height_from_ground - sheep_plate_thickness/2 - wheel_radius/4}"
      rpy="0 0 0" />
    <parent link="chassis" />
    <child link="caster" />
  </joint>

  <joint name="base_footprint_joint" type="fixed">
    <parent link="chassis" />
    <child link="base_footprint" />
  </joint>

  <joint name="lidar_joint" type="fixed">
    <parent link="chassis" />
    <child link="lidar_link" />
    <origin xyz="0 0 ${sheep_plate_height_from_ground + sheep_plate_thickness + 0.02 }" rpy="0 0 0" />
  </joint>
  <!-- caster frontal wheel Link -->

  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position" />
      <state_interface name="velocity" />
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position" />
      <state_interface name="velocity" />
    </joint>
  </ros2_control>

  <gazebo>
    <!-- Joint state publisher -->
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>$(find sheep-sim)/config/diff_drive_controller.yaml</parameters>
      <!-- <ros>
      <remapping>~/diff_drive_base_controller/cmd_vel_unstamped:=cmd_vel</remapping>
    </ros> -->
    </plugin>
  </gazebo>

  <gazebo reference="lidar_link">
    <sensor type="ray" name="lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0000000</min_angle>
            <max_angle>6.28</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <!-- <ros>
          <remapping>~/out:=scan</remapping>
        </ros> -->
        <!-- <topicName>/scan</topicName> -->
        <output_type>sensor_msgs/LaserScan</output_type>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>

  </gazebo>

</robot>